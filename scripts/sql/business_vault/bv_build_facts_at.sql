/* *********************************************************************************** */
/* *** ARGUS Taliance **************************************************************** */
/* *********************************************************************************** */

/* create tables in data vault to be pivoted */

CREATE OR REPLACE TRANSIENT TABLE DATA_VAULT.TRANSIENT_AT_FACT_KPI AS
  SELECT
      MD5(UPPER(f.SCENARIO_ID || '^' || f.ENTITY_ID || '^' || f.LINE_ITEM_ID || '^' || f.DATE)) AS PK_FACT_KPI_AT
    , f.MD5_HUB_AT_SCENARIO AS FK_DIMENSION_SCENARIO_AT
    , f.MD5_HUB_AT_ENTITY AS FK_DIMENSION_ENTITY_AT
    , f.DATE AS FK_DIMENSION_DATE    
    , m.AT_CURRENCY AS FK_DIMENSION_CURRENCY
    , a.DIMENSION_LABEL AS DIMENSION
    , l.LINE_ITEM_CODE AS LINE_ITEM -- FIXME use LINE_ITEM_LABEL
    , l.LINE_ITEM_CATEGORY_CODE AS CATEGORY
    , l.LINE_ITEM_TYPE AS TYPE
    , d.VALUE
  FROM
    DATA_VAULT.LINK_AT_FACT f
    INNER JOIN DATA_VAULT.SAT_AT_LINE_ITEM_DETAILS l ON f.MD5_HUB_AT_LINE_ITEM = l.MD5_HUB_AT_LINE_ITEM
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_DIMENSION_DETAILS a ON f.MD5_HUB_AT_DIMENSION = a.MD5_HUB_AT_DIMENSION
    INNER JOIN DATA_VAULT.SAT_AT_FACT_DETAILS d ON f.MD5_LINK_AT_FACT = d.MD5_LINK_AT_FACT
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_METADATA_ENTITY m ON f.MD5_HUB_AT_ENTITY = m.MD5_HUB_AT_ENTITY
  WHERE
    l.LINE_ITEM_CHARACTERISTIC = FALSE
    AND UPPER(l.LINE_ITEM_TYPE) = 'NUMERIC'
    AND UPPER(l.LINE_ITEM_STOCK_FLOW) = 'STOCK'
    AND d.VALUE IS NOT NULL
;

CREATE OR REPLACE TABLE BUSINESS_VAULT.FACT_FLOW_AT AS
  SELECT
      MD5(UPPER(f.SCENARIO_ID || '^' || f.ENTITY_ID || '^' || f.LINE_ITEM_ID || '^' || f.DATE)) AS PK_FACT_FLOW_AT
    , f.MD5_HUB_AT_SCENARIO AS FK_DIMENSION_SCENARIO_AT
    , f.MD5_HUB_AT_ENTITY AS FK_DIMENSION_ENTITY_AT
    , f.DATE AS FK_DIMENSION_DATE
    , m.AT_CURRENCY AS FK_DIMENSION_CURRENCY
    , a.DIMENSION_LABEL AS DIMENSION
    , l.LINE_ITEM_CODE AS LINE_ITEM -- FIXME use LINE_ITEM_LABEL
    , l.LINE_ITEM_CATEGORY_CODE AS CATEGORY
    , l.LINE_ITEM_TYPE AS TYPE
    , f.DATE
    , TRY_TO_DECIMAL(d.VALUE, 17, 4) AS VALUE
  FROM
    DATA_VAULT.LINK_AT_FACT f
    INNER JOIN DATA_VAULT.SAT_AT_FACT_DETAILS d ON f.MD5_LINK_AT_FACT = d.MD5_LINK_AT_FACT
    INNER JOIN DATA_VAULT.SAT_AT_LINE_ITEM_DETAILS l ON f.MD5_HUB_AT_LINE_ITEM = l.MD5_HUB_AT_LINE_ITEM
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_DIMENSION_DETAILS a ON f.MD5_HUB_AT_DIMENSION = a.MD5_HUB_AT_DIMENSION
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_METADATA_ENTITY m ON f.MD5_HUB_AT_ENTITY = m.MD5_HUB_AT_ENTITY
  WHERE
    l.LINE_ITEM_CHARACTERISTIC = FALSE
    AND UPPER(l.LINE_ITEM_TYPE) = 'NUMERIC'
    AND UPPER(l.LINE_ITEM_STOCK_FLOW) = 'FLOW'
    AND d.VALUE IS NOT NULL
;

CREATE OR REPLACE TABLE BUSINESS_VAULT.FACT_SET_AT AS
  SELECT
      MD5(UPPER(f.SCENARIO_ID || '^' || f.ENTITY_ID || '^' || f.LINE_ITEM_ID || '^' || f.DATE)) AS PK_FACT_SET_AT
    , f.MD5_HUB_AT_SCENARIO AS FK_DIMENSION_SCENARIO_AT
    , f.MD5_HUB_AT_ENTITY AS FK_DIMENSION_ENTITY_AT
    , f.DATE AS FK_DIMENSION_DATE
    , m.AT_CURRENCY AS FK_DIMENSION_CURRENCY
    , a.DIMENSION_LABEL AS DIMENSION
    , d.VALUE
    , CASE 
        WHEN UPPER(l.LINE_ITEM_TYPE) IN ('NUMERIC', 'FLOAT', 'DOUBLE', 'INTEGER') THEN TRY_TO_NUMERIC(d.VALUE, 17, 4)
        ELSE NULL
      END AS VALUE_NUMERIC      
    , CASE 
        WHEN UPPER(l.LINE_ITEM_TYPE) = 'DATE' THEN TRY_TO_DATE(d.VALUE)
        ELSE NULL
      END AS VALUE_DATE
    , CASE 
        WHEN UPPER(l.LINE_ITEM_TYPE) NOT IN ('NUMERIC', 'FLOAT', 'DOUBLE', 'INTEGER', 'DATE') THEN d.VALUE
        ELSE NULL
      END AS VALUE_STRING      
    , j.DATA_SET_CODE AS ATTRIBUTE_SET
    , l.LINE_ITEM_CODE AS ATTRIBUTE_CODE
    , l.LINE_ITEM_TYPE AS TYPE
    , i.NORDER AS ATTRIBUTE_ORDER
    , l.LINE_ITEM_CODE AS LINE_ITEM -- FIXME use LINE_ITEM_LABEL
    , l.LINE_ITEM_CATEGORY_CODE AS CATEGORY
  FROM
    DATA_VAULT.LINK_AT_FACT f
    INNER JOIN DATA_VAULT.SAT_AT_FACT_DETAILS                    d ON f.MD5_LINK_AT_FACT = d.MD5_LINK_AT_FACT
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_DIMENSION_DETAILS          a ON f.MD5_HUB_AT_DIMENSION = a.MD5_HUB_AT_DIMENSION
    LEFT OUTER JOIN DATA_VAULT.HUB_AT_LINE_ITEM                  h ON f.MD5_HUB_AT_LINE_ITEM = h.MD5_HUB_AT_LINE_ITEM
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_LINE_ITEM_DETAILS          l ON f.MD5_HUB_AT_LINE_ITEM = l.MD5_HUB_AT_LINE_ITEM
    LEFT OUTER JOIN DATA_VAULT.LINK_AT_DATA_SET_LINE_ITEM        k ON f.MD5_HUB_AT_LINE_ITEM = k.MD5_HUB_AT_LINE_ITEM
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_DATA_SET_LINE_ITEM_DETAILS i ON k.MD5_LINK_AT_DATA_SET_LINE_ITEM = i.MD5_LINK_AT_DATA_SET_LINE_ITEM
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_DATA_SET_DETAILS           j ON k.MD5_HUB_AT_DATA_SET = j.MD5_HUB_AT_DATA_SET
    LEFT OUTER JOIN DATA_VAULT.SAT_AT_METADATA_ENTITY 			 m ON f.MD5_HUB_AT_ENTITY = m.MD5_HUB_AT_ENTITY
;

CREATE OR REPLACE TABLE FACT_RELATIONSHIP_AT AS (
  SELECT
      l.MD5_LINK_AT_RELATIONSHIP AS PK_DIMENSION_RELATIONSHIP_AT
    , l.MD5_HUB_AT_SCENARIO AS FK_DIMENSION_SCENARIO_AT
    , l.MD5_HUB_AT_PARENT_ENTITY AS FK_DIMENSION_ENTITY_AT_PARENT
    , l.MD5_HUB_AT_CHILD_ENTITY AS FK_DIMENSION_ENTITY_AT_CHILD
    , td.RELATIONSHIP_TYPE_LABEL AS RELATIONSHIP_TYPE
    , d.END_DATE AS FK_DIMENSION_DATE
    , d.PATH
    , d.CALCULATION
    , d.RATIO
    , d.DIRECT_RELATIONSHIP
  FROM 
      DATA_VAULT.LINK_AT_RELATIONSHIP l
      INNER JOIN DATA_VAULT.SAT_AT_RELATIONSHIP_DETAILS d ON l.MD5_LINK_AT_RELATIONSHIP = d.MD5_LINK_AT_RELATIONSHIP      
      INNER JOIN DATA_VAULT.HUB_AT_RELATIONSHIP_TYPE t ON l.MD5_HUB_AT_RELATIONSHIP_TYPE = t.MD5_HUB_AT_RELATIONSHIP_TYPE           
      INNER JOIN DATA_VAULT.SAT_AT_RELATIONSHIP_TYPE_DETAILS td ON t.MD5_HUB_AT_RELATIONSHIP_TYPE = td.MD5_HUB_AT_RELATIONSHIP_TYPE
);
